\documentclass[11pt]{article}
\usepackage[margin=1in]{geometry}
\usepackage{titlesec}
\usepackage{enumitem}
\usepackage{hyperref}
\usepackage{parskip}
\usepackage{fancyhdr}
\usepackage{lmodern}

\pagestyle{fancy}
\fancyhf{}
\lhead{NYC Museum School}
\rhead{Intro CS Syllabus}
\cfoot{\thepage}

\titleformat{\section}{\Large\bfseries}{}{0em}{}
\titleformat{\subsection}{\normalsize\bfseries}{}{0em}{}

\begin{document}

\begin{center}
  {\LARGE \textbf{Programming by Design: Computing, Representation, and Reasoning}}\\[0.5em]
  \textit{Grade Level: 9th Grade \quad | \quad Full Year \quad | \quad Modular, Inquiry-Driven, Project-Based}
\end{center}

\section*{Philosophy}
Teach computer science as a lens for reasoning, systems thinking, and intellectual agency. Begin with functional reasoning, move through data modeling and control systems, and end with communication, networks, and real-world computational narratives.

\section*{Unit Overview}

\subsection*{Unit 1: The Story of Data}
\textbf{Framing Concept:} Programming is communication between humans and machines.
\begin{itemize}[leftmargin=*]
  \item Cultural/historical anchors: Ada Lovelace, Grace Hopper, underrepresentation
  \item Early routines: Computing in the News, What's Going On in This Graph?
  \item Mental models: abstraction, systems, structure
  \item No coding yet; set classroom norms and ways of thinking
\end{itemize}

\subsection*{Unit 2: Programming by Design (Racket)}
\textbf{Framing Concept:} A program is a structured solution to a problem.
\begin{itemize}[leftmargin=*]
  \item Core practices: design recipe, decomposition, contracts, examples, tests
  \item Key concepts: pure functions, conditionals (\texttt{cond}), recursion
  \item Emphasizes algebraic reasoning and function modeling
  \item Visuals and math-aligned patterns (e.g., flag project)
\end{itemize}

\subsection*{Unit 3: Data Science and Representation (Pyret)}
\textbf{Framing Concept:} Data is a constructed lens on the world.
\begin{itemize}[leftmargin=*]
  \item Functional transformations over tables: \texttt{filter}, \texttt{map}, \texttt{build-column}
  \item Boolean expressions, categories, visualizations
  \item Real datasets from museums and public archives
  \item Ends with synthesis and reflection on representation and omission
  \item Syntax shift from Racket to Pyret reinforces semantic continuity
\end{itemize}

\subsection*{Unit 4: Systems and Control (Python + EarSketch)}
\textbf{Framing Concept:} Programs model dynamic systems through control flow and state.
\begin{itemize}[leftmargin=*]
  \item Intro to loops, mutable variables, accumulators
  \item Use EarSketch to introduce structure via audio: repetition, patterns
  \item Transition to standard Python: build simulations, rule engines
  \item Students experience stateful systems and algorithmic behavior
\end{itemize}

\subsection*{Unit 5: Interface and Communication (HTML + CSS)}
\textbf{Framing Concept:} Code is interpretation---computational ideas need an audience.
\begin{itemize}[leftmargin=*]
  \item Learn structure and styling of the web
  \item Use static sites to present prior work (data, logic, projects)
  \item Emphasis on interpretability and design as argument
\end{itemize}

\subsection*{Unit 6: Code in the Wild (APIs + Jupyter Notebooks)}
\textbf{Framing Concept:} Code lives in systems, documents itself, and pulls from the web.
\begin{itemize}[leftmargin=*]
  \item API calls: retrieve and process data (e.g., Met Museum API)
  \item Jupyter for literate computing: markdown + code + output
  \item Mini research project: question, investigate, explain with code
  \item Emphasizes reproducibility, analysis, and interdisciplinary reach
\end{itemize}

\subsection*{Unit 7: Networks, Protocols, and Power}
\textbf{Framing Concept:} The internet is a system of abstractions that shapes global power.
\begin{itemize}[leftmargin=*]
  \item Explore IP, DNS, HTTP, and packets via simulation
  \item Command line basics: file navigation, permissions (if environment allows)
  \item Reflect on who owns infrastructure, metadata, and protocol standards
  \item Optional: version control basics (manual or Git)
\end{itemize}

\subsection*{Unit 8: Capstone Projects}
\textbf{Framing Concept:} What can you build, explain, and defend?
\begin{itemize}[leftmargin=*]
  \item Design and build projects: data narratives, simulations, interactive sites
  \item Deliverables: artifact, technical documentation, self-reflection
  \item Optional showcase or community presentation
\end{itemize}

\section*{Threaded Themes \& Practices}
\begin{itemize}[leftmargin=*]
  \item Ethics and power in computing (bias, surveillance, automation)
  \item Design thinking, subgoal labeling, and structural clarity
  \item Weekly routines: journal writing, news analysis, graph interpretation
  \item Language comparisons to reinforce conceptual fluency
\end{itemize}

\section*{Pathway Alignment}
\begin{itemize}[leftmargin=*]
  \item \textbf{AP CS A:} Object-oriented thinking, algorithm writing, Java readiness
  \item \textbf{Data Science + Capstone:} Investigative computing, research workflows
  \item \textbf{Algebra 2 + Computing:} Function modeling, logic, and systems thinking
\end{itemize}

\end{document}
